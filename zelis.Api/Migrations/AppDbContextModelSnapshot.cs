// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using zelis.Api.Data;

#nullable disable

namespace Zelis.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("zelis.Api.Models.Communication", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CurrentStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdatedUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("TypeCode")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("TypeCode");

                    b.ToTable("Communication", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            CurrentStatus = "",
                            LastUpdatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Welcome Email",
                            TypeCode = "email"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1211-1111-111111111111"),
                            CurrentStatus = "",
                            LastUpdatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Promo SMS",
                            TypeCode = "sms"
                        });
                });

            modelBuilder.Entity("zelis.Api.Models.CommunicationStatusHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("CommunicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("OccurredUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("StatusCode")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("CommunicationId");

                    b.ToTable("CommunicationStatusHistory", (string)null);
                });

            modelBuilder.Entity("zelis.Api.Models.CommunicationType", b =>
                {
                    b.Property<string>("TypeCode")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("TypeCode");

                    b.ToTable("CommunicationType", (string)null);

                    b.HasData(
                        new
                        {
                            TypeCode = "email",
                            DisplayName = "Email"
                        },
                        new
                        {
                            TypeCode = "sms",
                            DisplayName = "SMS"
                        });
                });

            modelBuilder.Entity("zelis.Api.Models.CommunicationTypeStatus", b =>
                {
                    b.Property<string>("TypeCode")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("StatusCode")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("CommunicationTypeTypeCode")
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("TypeCode", "StatusCode");

                    b.HasIndex("CommunicationTypeTypeCode");

                    b.ToTable("CommunicationTypeStatus", (string)null);

                    b.HasData(
                        new
                        {
                            TypeCode = "email",
                            StatusCode = "sent",
                            Description = "Email Sent"
                        },
                        new
                        {
                            TypeCode = "email",
                            StatusCode = "failed",
                            Description = "Email Failed"
                        },
                        new
                        {
                            TypeCode = "sms",
                            StatusCode = "delivered",
                            Description = "SMS Delivered"
                        },
                        new
                        {
                            TypeCode = "sms",
                            StatusCode = "undelivered",
                            Description = "SMS Undelivered"
                        });
                });

            modelBuilder.Entity("zelis.Api.Models.Communication", b =>
                {
                    b.HasOne("zelis.Api.Models.CommunicationType", null)
                        .WithMany()
                        .HasForeignKey("TypeCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("zelis.Api.Models.CommunicationStatusHistory", b =>
                {
                    b.HasOne("zelis.Api.Models.Communication", "Communication")
                        .WithMany()
                        .HasForeignKey("CommunicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Communication");
                });

            modelBuilder.Entity("zelis.Api.Models.CommunicationTypeStatus", b =>
                {
                    b.HasOne("zelis.Api.Models.CommunicationType", null)
                        .WithMany("AllowedStatuses")
                        .HasForeignKey("CommunicationTypeTypeCode");

                    b.HasOne("zelis.Api.Models.CommunicationType", null)
                        .WithMany()
                        .HasForeignKey("TypeCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("zelis.Api.Models.CommunicationType", b =>
                {
                    b.Navigation("AllowedStatuses");
                });
#pragma warning restore 612, 618
        }
    }
}
